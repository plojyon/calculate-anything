{"version":3,"sources":["logo.svg","components/CalculateButton.jsx","components/InputField.jsx","components/MiddleCard.jsx","components/Calculator.jsx","components/CreateCalculator.jsx","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","Button","Result","props","show","execute_function","children","useState","result","setResult","showResult","setShowResult","setError","onClick","then","gotten_result","catch","e","InputField","selected","TitleInputText","hasData","TitleInput","input","input_name","onChange","setSelected","onBlur","innerText","setInnerText","length","onFocus","target","value","MiddleCard","MiddleCardWrapper","Title","search","useLocation","searchParams","URLSearchParams","title_string","get","input_array","JSON","parse","maximums_array","weight_array","inputs","map","datahook","setDatahook","i","newText","v","j","CalculateButton","Function","call","enquote","text","console","log","split","RegExp","filter","el","stringify","calculatorName","setCalculatorName","setInputs","weights","setWeights","maxes","setMaxes","new_text","Promise","res","rej","inputs_array_string","encodeURIComponent","weights_array_string","maximums_array_string","title","relative_link","href","App","path","Calculator","CreateCalculator","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd9e51a3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n    width:100%;\n    position: absolute;\n    bottom:0;\n`;\n\nconst Button = styled.div`\n    background: #008aff;\n    color:white;\n    padding:1em;\n    margin:1em;\n    border-radius:4px;\n\n    &:hover{\n        cursor: pointer;\n    }\n`;\n\nconst Result = styled.div`\n    height:${props => props.show? `auto` : `0`};\n    transition: height .5s;\n    margin:1em;\n    box-sizing: border-box;\n`;\n\nexport default ({execute_function, children}) => {\n\n    const [result, setResult] = useState(\"\");\n    const [showResult, setShowResult] = useState(false); \n    const [error, setError] = useState(\"\"); \n\n    return <Wrapper>\n        <Button onClick={() => {\n            if(execute_function) execute_function().then(gotten_result => {\n                setResult(gotten_result);\n                setShowResult(true);\n            }).catch((e) => {\n                setError(e);\n            })\n        }}>{children}</Button>\n        <Result show={showResult}>{result}</Result>\n    </Wrapper>\n}","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-javascript';\n\n\nconst InputField = styled.div`\n    margin:1em;\n    border-radius: 4px;\n    padding:1em;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    display:flex;\n    flex-direction: column;\n    align-items: flex-start;\n\n    position:relative;\n\n    ${props => props.selected? `\n        border:1px #008aff solid;\n    `:`border:1px #dadada solid;`}\n\n    transition: border 0.3s;\n`;\n\nconst TitleInputText = styled.div`\n    flex-shrink:1;\n    font-size:.8em;\n    color:#008aff;\n\n    position:absolute;\n    z-index:10;\n\n    background: white;\n    padding:5px;\n    transform: translate(0, -50%);\n    pointer-events:none;\n\n    color:#818181;\n    ${props => props.selected? `\n        color:#008aff;\n    `:``}\n\n    top:50%;\n    ${props => props.hasData? `\n        top:0 !important;\n    `:``}\n\n    transition: top 0.3s;\n`;\n\nconst TitleInput = styled.input`\n    flex-shrink: 0;\n    border:none;\n    box-sizing:border-box;\n    width:100%;\n    border:none;\n    font-weight: bold;\n    font-size:1em;\n\n    &:focus{\n        outline: none;\n    }\n`;\n\n\nexport default ({input_name, onChange,selected, setSelected, onBlur}) => {\n    const [innerText, setInnerText] = useState(\"\");\n\n\n    return <InputField selected={selected}>\n        <TitleInputText\n            selected={selected}\n            hasData={selected || innerText.length > 0}\n        >{input_name}</TitleInputText>\n        <TitleInput\n            onFocus={() => {setSelected()}}\n\n            onBlur={() => onBlur()}\n\n            onChange={(input) => {\n                setInnerText(input.target.value);\n                onChange(input.target.value)\n            }}\n\n            value={innerText}\n        ></TitleInput>\n    </InputField>\n}\n","import styled from \"styled-components\";\n\nexport const MiddleCard = styled.div`\n    width:500px;\n    box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);\n    border-radius: 4px;\n    background: white;\n    position:relative;\n    padding-bottom:200px;\n`;\n\nexport const MiddleCardWrapper = styled.div`\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    height:100vh;\n`;\n","import React, { useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport styled from \"styled-components\";\nimport CalculateButton from \"./CalculateButton\";\nimport InputField from \"./InputField\";\n\nimport {MiddleCard, MiddleCardWrapper} from \"./MiddleCard\"\n\nconst Title = styled.div`\n    font-size: 1.5em;\n    padding:.5em;\n`;\n\nexport default () => {\n    const { search } = useLocation();\n\n    const searchParams = new URLSearchParams(search);\n    const weights_string = searchParams.get('weights');\n    const title_string = searchParams.get('title');\n    const input_array = JSON.parse(searchParams.get('inputs'));\n\tconst maximums_array = JSON.parse(searchParams.get('maximums'));\n\tconst weight_array = JSON.parse(searchParams.get('weights'));\n\n    const inputs = input_array;\n    const [selected, setSelected] = useState(-1);\n    const [datahook, setDatahook] = useState(inputs.map(() => \"\"));\n\n    return <MiddleCardWrapper><MiddleCard>\n        <Title>{title_string || \"Untitled calculator\"}</Title>\n        {inputs.map((input_name, i) => (\n            <InputField\n                selected={i == selected}\n                setSelected={() => setSelected(i)}\n                input_name={input_name + \" (points out of \"+ maximums_array[i] +\")\"}\n                onBlur={() => {setSelected(-1)}}\n                onChange={newText => {setDatahook(datahook.map((v, j) => i == j? newText : v))}}\n            ></InputField>\n        ))}\n\n        <CalculateButton execute_function={() => new Function(`input_array`, `weight_array`, `maximums_array`, `return new Promise((resolve, reject) => {\n\t\t\tlet sum = 0;\n\t\t\tconsole.log(input_array, weight_array, maximums_array);\n\t\t\tfor (let i in input_array) {\n\t\t\t\tconsole.log(i);\n\t\t\t\tsum += input_array[i] * weight_array[i] / maximums_array[i];\n\t\t\t}\n\t\t\tresolve(sum);\n        })`).call(null, datahook, weight_array, maximums_array)}>Calculate</CalculateButton>\n    </MiddleCard></MiddleCardWrapper>\n}\n","import React, {useState} from \"react\";\nimport styled from \"styled-components\";\nimport {MiddleCard, MiddleCardWrapper} from \"./MiddleCard\"\n\nimport InputField, {CodeField} from \"./InputField\";\nimport CalculateButton from \"./CalculateButton\";\nimport { useLocation } from \"react-router\";\n\nconst Title = styled.div`\n    font-size: 1.5em;\n    padding:.5em;\n`;\n\nconst Description = styled.div`\n    padding-left:2em;\n    padding-bottom:2em;\n    padding-right:2em;\n    font-size:.8em;\n    box-sizing:border-box;\n`;\n\nfunction enquote(text) {\n\tconsole.log(text.split(new RegExp(/[^-\\w_\\.]/, 'i')).filter(function (el) {return el != \"\"}));\n\treturn JSON.stringify(text.split(new RegExp(/[^-\\w_\\.]/, 'i')).filter(function (el) {return el != \"\"}));\n}\n\nexport default ({}) => {\n    const location = useLocation();\n    const [selected, setSelected] = useState(-1);\n    const [calculatorName, setCalculatorName] = useState(\"\");\n    const [inputs, setInputs] = useState(\"\");\n\tconst [weights, setWeights] = useState(\"\");\n\tconst [maxes, setMaxes] = useState(\"\");\n    return <MiddleCardWrapper>\n        <MiddleCard>\n            <Title>Create new calculator</Title>\n            <InputField\n                input_name={\"Calculator name\"}\n                selected={selected == 0}\n                setSelected={() => {setSelected(0)}}\n                onChange={new_text => setCalculatorName(new_text)}\n                onBlur={() => {setSelected(-1)}}\n            ></InputField>\n            <InputField\n                input_name={\"Inputs (ex. 1.dn 2.dn 3.dn 4-6.dn kolokvij)\"}\n                selected={selected == 1}\n                setSelected={() => setSelected(1)}\n                onChange={new_text => setInputs(enquote(new_text))}\n                onBlur={() => {setSelected(-1)}}\n            ></InputField>\n\t\t\t<InputField\n\t\t\t\tinput_name={'Maximums (ex. [\"4\", \"5\", \"5\", \"24\", \"100\"])'}\n\t\t\t\tselected={selected == 2}\n\t\t\t\tsetSelected={() => setSelected(2)}\n\t\t\t\tonChange={new_text => setMaxes(enquote(new_text))}\n\t\t\t\tonBlur={() => {setSelected(-1)}}\n\t\t\t></InputField>\n\t\t\t<InputField\n\t\t\t\tinput_name={\"Weights (ex. 17.5, 17.5, 25, 40)\"}\n\t\t\t\tselected={selected == 3}\n\t\t\t\tsetSelected={() => setSelected(3)}\n\t\t\t\tonChange={new_text => setWeights(enquote(new_text))}\n\t\t\t\tonBlur={() => {setSelected(-1)}}\n\t\t\t></InputField>\n            <CalculateButton execute_function={\n                () => new Promise((res, rej) => {\n\t\t\t\t\t// TODO: check that inputs and weights have the same length\n                    const inputs_array_string = encodeURIComponent(`${inputs}`);\n\t\t\t\t\tconst weights_array_string = encodeURIComponent(`${weights}`);\n\t\t\t\t\tconst maximums_array_string = encodeURIComponent(`${maxes}`);\n                    const title = encodeURIComponent(calculatorName);\n\n                    const relative_link = `#/calculator?title=${title}&inputs=${inputs_array_string}&weights=${weights_array_string}&maximums=${maximums_array_string}`;\n\n                    res(<a href={relative_link}>Generated link</a>)\n                })\n            }>Generate link</CalculateButton>\n        </MiddleCard>\n    </MiddleCardWrapper>\n}\n","import logo from './logo.svg';\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { useParams } from \"react-router\";\nimport './App.css';\nimport Calculator from './components/Calculator';\nimport CreateCalculator from './components/CreateCalculator';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/calculator\" children={<Calculator />} />\n        <Route path=\"/\" children={<CreateCalculator />} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"prismjs/themes/prism.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}